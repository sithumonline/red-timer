{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","color","setColor","useQuery","a","axios","get","response","data","refetchInterval","isFetched","isLoading","status","then","duration","console","log","className","src","logo","alt","style","split","onClick","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"oOAAe,MAA0B,iC,wCC6C1BA,MAvCf,WAAgB,IAAD,EACaC,mBAAS,WADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,SAFtB,mBAENG,EAFM,KAECC,EAFD,OAIkCC,YAC7C,WACA,wCAAM,4BAAAC,EAAA,sEACmBC,IAAMC,IAAI,qCAD7B,cACEC,EADF,yBAEGA,EAASC,MAFZ,6CAIN,CACEC,gBAAiB,MAPbD,EAJK,EAILA,KAAME,EAJD,EAICA,UAAWC,EAJZ,EAIYA,UAAWC,EAJvB,EAIuBA,OAwBpC,OAbIF,GAAwB,YAAXE,IAAyBD,GAAaH,GACrDA,EAAKK,MAAK,SAACL,GACTR,EAASQ,EAAKA,KAAKM,UACnBZ,EAASM,EAAKA,KAAKP,UAIvBc,QAAQC,IAAR,UAAejB,EAAf,YAAwBE,EAAxB,YAAiCW,IAO/B,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mBAAGC,MAAO,CAAEpB,MAAOA,GAASgB,UAAU,OAAtC,SAA8ClB,EAAMuB,MAAM,KAAK,KAC/D,wBAAQL,UAAU,SAASM,QATf,WAChBlB,IAAMmB,KAAK,sCAQP,yBC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCARO,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.a2f131a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState(\"Loading\");\n  const [color, setColor] = useState(\"white\");\n\n  const { data, isFetched, isLoading, status } = useQuery(\n    \"getTime\",\n    () => async () => {\n      const response = await axios.get(\"http://localhost:3080/api/v1/time\");\n      return response.data;\n    },\n    {\n      refetchInterval: 1000,\n    }\n  );\n\n  if (isFetched && status === \"success\" && !isLoading && data) {\n    data.then((data) => {\n      setValue(data.data.duration);\n      setColor(data.data.color);\n    });\n  }\n\n  console.log(`${value}-${color}-${status}`);\n\n  const resetTime = () => {\n    axios.post(\"http://localhost:3080/api/v1/time\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p style={{ color: color }} className=\"Time\">{value.split('.')[0]}</p>\n        <button className=\"Button\" onClick={resetTime}>Reset</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}